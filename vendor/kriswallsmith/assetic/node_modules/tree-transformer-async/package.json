{
  "_args": [
    [
      "tree-transformer-async@1.x",
      "/var/www/html/will/vendor/kriswallsmith/assetic/node_modules/roole-evaluator"
    ]
  ],
  "_from": "tree-transformer-async@>=1.0.0 <2.0.0",
  "_id": "tree-transformer-async@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/tree-transformer-async",
  "_npmUser": {
    "email": "curvedmark@gmail.com",
    "name": "curvedmark"
  },
  "_npmVersion": "1.3.5",
  "_phantomChildren": {},
  "_requested": {
    "name": "tree-transformer-async",
    "raw": "tree-transformer-async@1.x",
    "rawSpec": "1.x",
    "scope": null,
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/roole-evaluator"
  ],
  "_resolved": "https://registry.npmjs.org/tree-transformer-async/-/tree-transformer-async-1.0.0.tgz",
  "_shasum": "a9882df63546b77b3726080959c134a9dea75a07",
  "_shrinkwrap": null,
  "_spec": "tree-transformer-async@1.x",
  "_where": "/var/www/html/will/vendor/kriswallsmith/assetic/node_modules/roole-evaluator",
  "author": {
    "email": "curvedmark@gmail.com",
    "name": "Glen Huang"
  },
  "bugs": {
    "url": "https://github.com/curvedmark/tree-transformer-async/issues"
  },
  "dependencies": {
    "tree-transformer": "*",
    "tree-visitor-async": "*"
  },
  "description": "Transform nodes in the tree asynchronously and sequentially",
  "devDependencies": {
    "mocha": "1.x",
    "mocha-as-promised": "1.x"
  },
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "dist": {
    "shasum": "a9882df63546b77b3726080959c134a9dea75a07",
    "tarball": "https://registry.npmjs.org/tree-transformer-async/-/tree-transformer-async-1.0.0.tgz"
  },
  "homepage": "https://github.com/curvedmark/tree-transformer-async#readme",
  "keywords": [
    "ast",
    "async",
    "compiler",
    "transformer",
    "tree"
  ],
  "license": "MIT",
  "main": "lib/TransformerAsync.js",
  "maintainers": [
    {
      "name": "curvedmark",
      "email": "curvedmark@gmail.com"
    }
  ],
  "name": "tree-transformer-async",
  "optionalDependencies": {},
  "readme": "# Tree Transformer Async\n\nTransform nodes in the tree asynchronously and sequentially.\n\nAsynchronous version of [Tree Transformer](https://github.com/curvedmark/tree-transformer). Actions can return a promise and `.visit()` returns a promise.\n\n## Example\n\n```javascript\nvar fs = require('fs');\nvar Q = require('q');\nvar TransformerAsync = require('tree-transformer-async');\nvar nodes = [\n\t{ type: 'import', value: 'path/to/file1' },\n\t{ type: 'import', value: 'path/to/file2' },\n];\n\nfunction MyVisitorAsync() {}\nMyVisitorAsync.prototype = new VisitorAsync();\n\nMyVisitorAsync.prototype.visit_import = function (importNode) {\n\tvar deferred = Q.defer();\n\tfs.readFile(importNode.value, 'utf8', deferred.makeNodeResolver());\n\treturn deferred.promise.then(function (content) {\n\t\treturn content;\n\t});\n};\n\nnew MyVisitorAsync().visit(nodes).then(function (result) {\n\tconsole.log(result); // [content of file1, content of file2]\n});\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/curvedmark/tree-transformer-async.git"
  },
  "scripts": {
    "test": "mocha --bail"
  },
  "version": "1.0.0"
}
