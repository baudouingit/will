{
  "_args": [
    [
      "natural-range@1.x",
      "/var/www/html/will/vendor/kriswallsmith/assetic/node_modules/roole-evaluator"
    ]
  ],
  "_from": "natural-range@>=1.0.0 <2.0.0",
  "_id": "natural-range@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/natural-range",
  "_npmUser": {
    "email": "curvedmark@gmail.com",
    "name": "curvedmark"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "name": "natural-range",
    "raw": "natural-range@1.x",
    "rawSpec": "1.x",
    "scope": null,
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/roole-builtin",
    "/roole-evaluator"
  ],
  "_resolved": "https://registry.npmjs.org/natural-range/-/natural-range-1.0.0.tgz",
  "_shasum": "d76f56423ae606ab0cc8496fe667fe1b43724274",
  "_shrinkwrap": null,
  "_spec": "natural-range@1.x",
  "_where": "/var/www/html/will/vendor/kriswallsmith/assetic/node_modules/roole-evaluator",
  "author": {
    "email": "curvedmark@gmail.com",
    "name": "Glen Huang"
  },
  "bugs": {
    "url": "https://github.com/curvedmark/natural-range/issues"
  },
  "dependencies": {},
  "description": "Convert any range to an exclusive range in natural order.",
  "devDependencies": {
    "mocha": "1.x"
  },
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "dist": {
    "shasum": "d76f56423ae606ab0cc8496fe667fe1b43724274",
    "tarball": "https://registry.npmjs.org/natural-range/-/natural-range-1.0.0.tgz"
  },
  "homepage": "https://github.com/curvedmark/natural-range#readme",
  "keywords": [
    "range",
    "sort",
    "util",
    "utility"
  ],
  "license": "MIT",
  "main": "lib/Range.js",
  "maintainers": [
    {
      "name": "curvedmark",
      "email": "curvedmark@gmail.com"
    }
  ],
  "name": "natural-range",
  "optionalDependencies": {},
  "readme": "# natural-range\n\nConvert any range to an exclusive range in natural order.\n\n## Installation\n\n\tnpm install natural-range\n\n## Example\n\n```javascript\nvar assert = require('assert');\nvar Range = require('natural-range');\n\nvar range = new Range({ from: 3, to: 1 });\n\nassert.equal(range.from, 1);\nassert.equal(range.to, 4);\nassert.equal(range.reversed, true);\n```\n\nSee `test/test.js` for more examples.\n\n## API\n\n```javascript\nvar range = new Range(options);\n```\n\n* `options` - an object literal supports these options:\n\t* `from` - the start number\n\t* `to` - the end number\n\t* `exclusive` - a boolean denoting if the range is exclusive\n\t* `length` - if `from` or `to` is negative, and this option is provided, the negative number means backwards indexing and is relative to `length`\n\n* `range` - the range object in natural order containing these properties:\n\t* `from` - the start number\n\t* `to` - the end number\n\t* `reversed` - a boolean denoting if the original range is in reversed order",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/curvedmark/natural-range.git"
  },
  "scripts": {
    "test": "mocha --bail --ui qunit"
  },
  "version": "1.0.0"
}
